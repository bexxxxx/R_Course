SECTION 1
getwd()
  get working directory, find out where R is looking
setwd(/Users/RebeccaReilly")
or command D
_______________________________________________________
object and variables
x <- 4
my.height <- 5*12 + 4

hit up arrow in command line to see previous commands
_______________________________________________________
vector: single set of values in an order
v <- c(2, 4, 6, 8)
vector of length 1 is equivalent to a scalar
v[1] shows us first element of the vector

look.at<- 1:3
  creates a vector of 1 2 3
v[look.at] shows us first 3 values of v

length indicates number of elements in a vector
head returns first 6 observations
tail returns last 6 observations
  tail(v, 3) gives us the last 3 of the last of values
_______________________________________________________
strings: character objects
v <- c("one", "lady gaga")
boolean vectors
  c(TRUE, FALSE, TRUE)

under.10 <- nchar(v) < 10
v[under.10] will give us the obs in v with values <10
_______________________________________________________
v <- c(10, 20, 30, 40, 50, 60)
v + 1 adds 1 to every observations

w <- 2:7
v*w gives us element wise vector multiplication
  v1*W1 V2*W2 ...
SAME WAY WITH ADD/SUBT/DIV

vectors of different lengths
  w <- c(5, 10)
  v*w
  output: 50, 200, 150, 400, 250, 600
R recycles vector w to complete multiplication

w <- seq(5, 20, 5)
  where sequence starts, where seq ends, how far to jump
  v*w
  output: 50 200 450 800 250 600
Warning message because w had 2 elements left over when finished with v

v^2
p <- 2:7
v^p
sqrt(v)
_______________________________________________________
creating matrix: start with vector
v <- 1:12
matrix(v, nrow=3, ncol=4)

matrix(0, 3, 4) all zeros

matrix(11:13, 3, 4) gives us columns of 11 12 13

dim(m) gives us num of rows and columns
length(m) # elements in entire matrix
head(m) up to six rows in top of matrix
tail(m) up to six rows in bottom of matrix

tail(m, 1) changes # of rows we get back

select 1 or more elements of matrix
  m <- matrix(1:12, 3, 4)
  m[2,4] element in 2nd row and 4th column
  m[2, ] get all columns
  m[1:2, 4] rows 1 and 2, column 4
  m[1:2, 3:4] gives us sub matrix
_______________________________________________________
SECTION 2
